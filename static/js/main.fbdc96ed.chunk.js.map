{"version":3,"sources":["assets/img/lighthouse.png","assets/img/404.png","Components/Loader.jsx","Components/Error.jsx","Components/Photo.jsx","Pages/List/ListPresenter.jsx","Pages/List/ListContainer.jsx","Pages/List/index.js","Components/Label.jsx","Pages/Detail/DetailPresenter.jsx","Pages/Detail/DetailContainer.jsx","Pages/Detail/index.js","Components/404.jsx","Components/Router.js","Components/GlobalStyles.js","Components/App.js","theme.js","index.js"],"names":["module","exports","Container","styled","div","Loader","size","tip","ImageContainer","Img","img","Text","h2","Error","src","require","li","ButtonBox","CheckBtn","InCompleateBtn","xmlns","width","height","viewBox","fill","fillRule","rx","fontFamily","fontSize","fontWeight","letterSpacing","x","y","CompleateBtn","ContentPhoto","Card","ContentInfoBox","ContentText","Meta","LabelCount","number","d","Photo","memo","id","photoUrl","completed","labels","to","key","hoverable","cover","alt","title","split","length","FitlerBox","FilterHeader","FitlerIcon","FontAwesomeIcon","props","theme","gray","FilterTitle","span","Filter","ligthGray","FilterCheckBox","Checkbox","checkBox","blue","TotalCountBox","Count","ContentBox","ul","ListPresenter","addComma","completedList","onClickFilter","useContext","DataContext","ladeltypes","total","meta","photos","icon","faFilter","map","onClick","value","toString","replace","photoTakenAt","createdAt","undefined","find","item","createContext","metaData","photosData","dispatch","initialState","isLoading","isError","reducer","state","action","type","GET_LABEL_TYPES","GET_DATA","FETCH_DATA","API_FAILURE","ListContainer","history","location","search","useReducer","useMemo","useState","process","url","setUrl","label1","useRef","label2","label3","label4","getLabels","a","axios","get","data","useEffect","getPhotos","currentPage","onScroll","useCallback","window","scrollY","document","documentElement","clientHeight","scrollHeight","maxPage","current","message","warning","scrollRestoration","addEventListener","removeEventListener","num","JSON","parse","localStorage","getItem","Provider","e","currentTarget","checked","push","LabelItem","Title","p","typeId","description","Item","label","Contant","PhotoBox","LabelBox","LabelHeader","LabelIcon","LabelTitle","DetailPresenter","handleCancel","handleSwitch","centered","visible","onCancel","footer","onChange","defaultChecked","checkedChildren","unCheckedChildren","style","border","val","Label","DetailContainer","params","match","notification","getData","stopPropagation","goBack","_","storageArr","forEach","findIndex","setItem","stringify","go","NotFoundPage","path","component","List","exact","Detail","globalStyles","createGlobalStyle","reset","btnBlue","App","Router","GlobalStyles","yellow","green","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fbdc96ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lighthouse.64af4a9f.png\";","module.exports = __webpack_public_path__ + \"static/media/404.f68a5ca7.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Spin } from \"antd\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  text-align: center;\n  padding-top: 200px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <Helmet>\n      <title>LOADING | Nearthlab</title>\n    </Helmet>\n    <Spin size=\"large\" tip=\"Loading...\" />\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  max-width: 400px;\n  margin: 80px auto 50px;\n`;\n\nconst Img = styled.img`\n  display: flex;\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst Text = styled.h2`\n  line-height: 1.4;\n  word-wrap: break-word;\n  margin: 20px 0 15px;\n  font-size: 26px;\n  font-weight: 600;\n  color: #b5b5b5;\n`;\n\nconst Error = () => (\n  <Container>\n    <Helmet>\n      <title>ERROR | Nearthlab</title>\n    </Helmet>\n    <ImageContainer>\n      <Img src={require(`assets/img/lighthouse.png`)} />\n    </ImageContainer>\n    <Text>PAGE NOT FOUND</Text>\n  </Container>\n);\n\nexport default Error;\n","import React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"antd\";\n\nconst Container = styled.li`\n  width: 25%;\n  padding: 3px;\n  list-style: none;\n  display: inline-block;\n  vertical-align: top;\n\n  @media (max-width: 767px) {\n    width: 50%;\n  }\n  @media (min-width: 768px) and (max-width: 991px) {\n    width: 50%;\n  }\n  .ant-card-body {\n    padding: 11px 10px;\n  }\n`;\n\nconst ButtonBox = styled.div`\n  position: relative;\n`;\n\nconst CheckBtn = styled.div`\n  position: absolute;\n  text-align: right;\n  top: 10px;\n  right: 10px;\n  z-index: 1;\n`;\n\nconst InCompleateBtn = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"18\"\n    viewBox=\"0 0 40 18\"\n  >\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <rect width=\"40\" height=\"18\" fill=\"#F5C85C\" rx=\"9\" />\n      <text\n        fill=\"#FFF\"\n        fontFamily=\"NotoSansCJKkr-Medium, Noto Sans CJK KR\"\n        fontSize=\"10\"\n        fontWeight=\"400\"\n        letterSpacing=\"-.278\"\n      >\n        <tspan x=\"7\" y=\"13\">\n          미완료\n        </tspan>\n      </text>\n    </g>\n  </svg>\n);\nconst CompleateBtn = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"32\"\n    height=\"18\"\n    viewBox=\"0 0 32 18\"\n  >\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <rect width=\"32\" height=\"18\" fill=\"#69DD95\" rx=\"9\" />\n      <text\n        fill=\"#FFF\"\n        fontFamily=\"NotoSansCJKkr-Bold, Noto Sans CJK KR\"\n        fontSize=\"10\"\n        fontWeight=\"bold\"\n        letterSpacing=\"-.278\"\n      >\n        <tspan x=\"7\" y=\"13\">\n          완료\n        </tspan>\n      </text>\n    </g>\n  </svg>\n);\n\nconst ContentPhoto = styled(Card)``;\n\nconst Img = styled.img`\n  height: 140px;\n\n  @media (max-width: 767px) {\n    height: 300px;\n  }\n  @media (min-width: 768px) and (max-width: 991px) {\n    height: 300px;\n  }\n`;\n\nconst ContentInfoBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ContentText = styled(Card.Meta)`\n  display: block;\n  position: relative;\n  flex-grow: 1;\n  .ant-card-meta-title {\n    font-size: 13px;\n  }\n`;\n\nconst LabelCount = ({ number }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"56\"\n    height=\"18\"\n    viewBox=\"0 0 56 18\"\n  >\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <rect width=\"56\" height=\"18\" fill=\"#E9EEF1\" rx=\"9\" />\n      <text\n        fill=\"#2A67E2\"\n        fontFamily=\"NotoSansCJKkr-Medium, Noto Sans CJK KR\"\n        fontSize=\"10\"\n        fontWeight=\"400\"\n        letterSpacing=\"-.278\"\n      >\n        <tspan x=\"17\" y=\"12.553\">\n          {`라벨 ${number}개`}\n        </tspan>\n      </text>\n      <path\n        fill=\"#2A67E2\"\n        d=\"M10.708 8.293l4.363 4.364-1.414 1.414-4.364-4.363a3 3 0 0 1-4.001-4.001l2 2 1.415-1.414-2-2a3 3 0 0 1 4.001 4.001z\"\n      />\n    </g>\n  </svg>\n);\n\nconst Photo = memo(({ id, photoUrl, completed, labels }) => (\n  <Link to={`/photos/${id}`}>\n    <Container key={id}>\n      <ButtonBox>\n        <CheckBtn>{completed ? <CompleateBtn /> : <InCompleateBtn />}</CheckBtn>\n      </ButtonBox>\n      <ContentPhoto hoverable cover={<Img alt={id} src={photoUrl} />}>\n        <ContentInfoBox>\n          <ContentText title={photoUrl.split(\"/\")[3]} />\n          <LabelCount number={labels ? labels.length : null} />\n        </ContentInfoBox>\n      </ContentPhoto>\n    </Container>\n  </Link>\n));\n\nexport default Photo;\n","import React, { Fragment, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { DataContext } from \"./ListContainer\";\nimport Helmet from \"react-helmet\";\nimport { Checkbox, Divider, BackTop } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilter } from \"@fortawesome/free-solid-svg-icons\";\nimport Photo from \"Components/Photo\";\n\nconst Container = styled.div`\n  position: relative;\n  max-width: 794px;\n\n  @media (min-width: 768px) and (max-width: 991px) {\n    width: 90%;\n    margin: 0 auto;\n    padding: 27px 0 80px;\n  }\n  @media (min-width: 992px) and (max-width: 1199px) {\n    width: 90%;\n    margin: 0 auto;\n    padding: 27px 0 80px;\n  }\n  @media (min-width: 1200px) {\n    width: 87.72%;\n    margin: 0 auto;\n    padding: 27px 0 80px;\n  }\n  @media (max-width: 767px) {\n    padding-bottom: 20px;\n  }\n\n  :after {\n    display: block;\n    content: \"\";\n    clear: both;\n  }\n`;\n\nconst FitlerBox = styled.div``;\n\nconst FilterHeader = styled.div`\n  margin-bottom: 12px;\n`;\n\nconst FitlerIcon = styled(FontAwesomeIcon)`\n  color: ${props => props.theme.gray};\n`;\n\nconst FilterTitle = styled.span`\n  margin-left: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: -0.5px;\n  color: ${props => props.theme.gray};\n`;\n\nconst Filter = styled.div`\n  font-size: 13px;\n  letter-spacing: -0.5px;\n  color: ${props => props.theme.ligthGray};\n  label {\n    margin-right: 8px;\n  }\n`;\n\nconst FilterCheckBox = styled(Checkbox)`\n  border-color: ${props => props.theme.checkBox};\n  .ant-checkbox-wrapper:hover .ant-checkbox-inner,\n  .ant-checkbox:hover .ant-checkbox-inner,\n  .ant-checkbox-input:focus + .ant-checkbox-inner {\n    border-color: ${props => props.theme.blue};\n  }\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${props => props.theme.blue};\n    border-color: ${props => props.theme.blue};\n  }\n  .ant-checkbox-checked::after {\n    border: 1px solid ${props => props.theme.blue};\n  }\n`;\n\nconst TotalCountBox = styled.div``;\n\nconst Count = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: -0.5px;\n  color: ${props => props.theme.gray};\n`;\n\nconst ContentBox = styled.ul``;\n\nconst ListPresenter = ({ addComma, completedList, onClickFilter }) => {\n  const {\n    ladeltypes,\n    meta: { total },\n    photos\n  } = useContext(DataContext);\n\n  return (\n    <Container>\n      <BackTop />\n      <Helmet>\n        <title>사진목록 | Nearthlab</title>\n      </Helmet>\n      <FitlerBox>\n        <FilterHeader>\n          <FitlerIcon icon={faFilter} />\n          <FilterTitle>라벨 종류 선택</FilterTitle>\n        </FilterHeader>\n        <Filter>\n          {ladeltypes.map(({ id, title }) => (\n            <Fragment key={id}>\n              <FilterCheckBox onClick={onClickFilter} value={id} />\n              {title}\n            </Fragment>\n          ))}\n        </Filter>\n      </FitlerBox>\n      <Divider />\n      <TotalCountBox>\n        <Count>{`전체 ${total\n          .toString()\n          .replace(\"/B(?=(d{3})+(?!d))/g\", \",\")}개`}</Count>\n      </TotalCountBox>\n      <ContentBox>\n        {photos.map(\n          ({ id, photoUrl, photoTakenAt, createdAt, completed, labels }) => (\n            <Photo\n              key={id}\n              id={id}\n              photoUrl={photoUrl}\n              photoTakenAt={photoTakenAt}\n              createdAt={createdAt}\n              completed={\n                completedList !== null &&\n                completedList.find(item => id === item.id) !== undefined\n                  ? completedList.find(item => id === item.id).completed\n                  : completed\n              }\n              labels={labels}\n            />\n          )\n        )}\n      </ContentBox>\n    </Container>\n  );\n};\nexport default ListPresenter;\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  useReducer,\n  createContext,\n  useRef\n} from \"react\";\nimport axios from \"axios\";\nimport Loader from \"Components/Loader\";\nimport Error from \"Components/Error\";\nimport ListPresenter from \"./ListPresenter\";\nimport { message } from \"antd\";\n\nexport const DataContext = createContext({\n  ladeltypes: [],\n  metaData: {},\n  photosData: [],\n  dispatch: () => {}\n});\n\nconst initialState = {\n  isLoading: true,\n  isError: false,\n  ladeltypes: [],\n  meta: {},\n  photos: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case GET_LABEL_TYPES:\n      return {\n        ...state,\n        ladeltypes: action.ladeltypes\n      };\n    case GET_DATA:\n      return {\n        ...state,\n        isLoading: false,\n        meta: action.meta,\n        photos: action.photos\n      };\n    case FETCH_DATA:\n      return {\n        ...state,\n        meta: action.meta,\n        photos: [...state.photos, ...action.photos]\n      };\n    case API_FAILURE:\n      return { ...state, isLoading: false, isError: true };\n    default:\n      return state;\n  }\n};\n\nexport const GET_LABEL_TYPES = \"GET_LABEL_TYPES\";\nexport const GET_DATA = \"GET_DATA\";\nexport const FETCH_DATA = \"FETCH_DATA\";\nexport const API_FAILURE = \"API_FAILURE\";\n\nconst ListContainer = ({ history, location: { search } }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { isLoading, isError, meta, ladeltypes, photos } = state;\n  const value = useMemo(() => ({ ladeltypes, meta, photos, dispatch }), [\n    ladeltypes,\n    meta,\n    photos\n  ]);\n  const [url, setUrl] = useState(\n    `${process.env.REACT_APP_NEARTHLAB_API_URL}photos`\n  );\n  const label1 = useRef(false);\n  const label2 = useRef(false);\n  const label3 = useRef(false);\n  const label4 = useRef(false);\n\n  // Get label types\n  const getLabels = async () => {\n    try {\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_NEARTHLAB_API_URL}labelTypes`\n      );\n      dispatch({\n        type: GET_LABEL_TYPES,\n        ladeltypes: data\n      });\n    } catch (error) {\n      dispatch({ type: API_FAILURE });\n    }\n  };\n\n  useEffect(() => {\n    // Get photo lists\n    const getPhotos = async () => {\n      try {\n        const {\n          data: { meta, photos }\n        } = await axios.get(url);\n\n        dispatch({\n          type: meta.currentPage === 1 ? GET_DATA : FETCH_DATA,\n          meta,\n          photos\n        });\n      } catch (error) {\n        dispatch({ type: API_FAILURE });\n      }\n    };\n\n    // 필터 데이터가 없을 경우\n    if (ladeltypes.length === 0) {\n      getLabels();\n    } else {\n      getPhotos();\n    }\n  }, [ladeltypes, url]);\n\n  // Infinite Scroll 함수\n  const onScroll = useCallback(() => {\n    if (\n      window.scrollY + document.documentElement.clientHeight >\n      document.documentElement.scrollHeight - 300\n    ) {\n      if (meta.currentPage < meta.maxPage) {\n        setUrl(\n          `${\n            process.env.REACT_APP_NEARTHLAB_API_URL\n          }photos?page=${meta.currentPage + 1}${\n            label1.current ? \"&labelTypeIds[]=1\" : \"\"\n          }${label2.current ? \"&labelTypeIds[]=2\" : \"\"}${\n            label3.current ? \"&labelTypeIds[]=3\" : \"\"\n          }${label4.current ? \"&labelTypeIds[]=4\" : \"\"}`\n        );\n      } else {\n        message.warning(\"마지막 페이지 입니다 :)\");\n      }\n    }\n  }, [meta.currentPage, meta.maxPage]);\n\n  // 스크롤 이벤트\n  useEffect(() => {\n    if (\"scrollRestoration\" in window.history) {\n      window.history.scrollRestoration = \"manual\";\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [onScroll]);\n\n  // 3자리 콤마 계산 정규식\n  const addComma = useCallback(num => {\n    var regexp = /\\B(?=(\\d{3})+(?!\\d))/g;\n    return num.toString().replace(regexp, \",\");\n  }, []);\n\n  const completedList = useMemo(() => {\n    let completedList = JSON.parse(localStorage.getItem(\"completed\"));\n    return completedList;\n  }, []);\n\n  // 라벨 종류 선택에 따른 API URL 주소 세팅\n  const onClickFilter = e => {\n    switch (e.currentTarget.value) {\n      case \"1\":\n        label1.current = e.currentTarget.checked;\n        break;\n      case \"2\":\n        label2.current = e.currentTarget.checked;\n        break;\n      case \"3\":\n        label3.current = e.currentTarget.checked;\n        break;\n      case \"4\":\n        label4.current = e.currentTarget.checked;\n        break;\n      default:\n        break;\n    }\n    setUrl(\n      `${process.env.REACT_APP_NEARTHLAB_API_URL}photos?page=1${\n        label1.current ? \"&labelTypeIds[]=1\" : \"\"\n      }${label2.current ? \"&labelTypeIds[]=2\" : \"\"}${\n        label3.current ? \"&labelTypeIds[]=3\" : \"\"\n      }${label4.current ? \"&labelTypeIds[]=4\" : \"\"}`\n    );\n    history.push(\"/\");\n  };\n\n  return isLoading ? (\n    <Loader />\n  ) : isError ? (\n    <Error />\n  ) : (\n    <DataContext.Provider value={value}>\n      <ListPresenter\n        addComma={addComma}\n        completedList={completedList}\n        onClickFilter={onClickFilter}\n      />\n    </DataContext.Provider>\n  );\n};\n\nexport default ListContainer;\n","import ListContainer from \"./ListContainer\";\n\nexport default ListContainer;\n","import React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Card, Descriptions } from \"antd\";\n\nconst LabelItem = styled(Card)`\n  width: 400;\n  height: 194;\n`;\n\nconst Title = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: -0.5px;\n  color: ${props => props.theme.gray};\n`;\n\nconst Photo = memo(({ typeId, type, description }) => (\n  <LabelItem>\n    <Title>{`라벨 #${typeId}`}</Title>\n    <Descriptions>\n      <Descriptions.Item label=\"유형\">{type}</Descriptions.Item>\n    </Descriptions>\n    <Descriptions>\n      <Descriptions.Item label=\"설명\">{description}</Descriptions.Item>\n    </Descriptions>\n  </LabelItem>\n));\n\nexport default Photo;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Switch, Card, Descriptions } from \"antd\";\nimport { DataContext } from \"./DetailContainer\";\nimport Label from \"Components/Label\";\n\nconst Container = styled.div``;\n\nconst Contant = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst PhotoBox = styled.div`\n  .ant-card-hoverable:hover {\n    border-color: none;\n    box-shadow: none;\n  }\n  .ant-card-body {\n    padding-left: 0 !important;\n    padding-right: 0 !important;\n  }\n  .ant-descriptions-item-label {\n    font-weight: bold !important;\n    width: 25% !important;\n  }\n  .ant-descriptions-item-colon::after {\n    content: none !important;\n  }\n`;\n\nconst Img = styled.img`\n  width: 240px;\n  height: 178.9px;\n`;\n\nconst LabelBox = styled.div`\n  width: 400px;\n  .ant-card-bordered {\n    margin: 10px 0 !important;\n    border-radius: 10px !important;\n    box-shadow: 0 2px 2px 0 #ecedef !important;\n    border: solid 1px #dfe3ea !important;\n    background-color: #ffffff !important;\n  }\n`;\n\nconst LabelHeader = styled.div`\n  margin-bottom: 12px;\n`;\n\nconst LabelIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"11\"\n    height=\"11\"\n    viewBox=\"0 0 11 11\"\n  >\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <path d=\"M-4-4h18v18H-4z\" />\n      <path\n        fill=\"#727682\"\n        d=\"M6.234 4.69L11 9.454 9.455 11 4.69 6.234a3.277 3.277 0 0 1-4.37-4.37l2.185 2.185L4.05 2.504 1.864.32a3.277 3.277 0 0 1 4.37 4.37z\"\n      />\n    </g>\n  </svg>\n);\n\nconst LabelTitle = styled.span`\n  padding-left: 5px;\n  font-size: 14px;\n  font-weight: bold;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: -0.5px;\n  color: ${props => props.theme.ligthGray};\n`;\n\nconst DetailPresenter = ({ handleCancel, handleSwitch }) => {\n  const {\n    ladeltypes,\n    data: { id, photoUrl, photoTakenAt, createdAt, completed },\n    labels\n  } = useContext(DataContext);\n\n  return (\n    <Container>\n      <Modal\n        title=\"파일 상세 정보\"\n        centered\n        visible={true}\n        onCancel={handleCancel}\n        width=\"710px\"\n        footer={\n          <Switch\n            onChange={handleSwitch}\n            defaultChecked={completed}\n            checkedChildren=\"완료\"\n            unCheckedChildren=\"미완료\"\n          />\n        }\n      >\n        <Contant>\n          <PhotoBox>\n            <Card\n              hoverable\n              style={{ width: 240, border: \"none\" }}\n              cover={<Img alt={id} src={photoUrl} />}\n            >\n              {[\n                { label: \"파일명\", val: photoUrl.split(\"/\")[3] },\n                {\n                  label: \"촬영시간\",\n                  val:\n                    photoTakenAt.split(\"T\")[0].replace(/-/g, \".\") +\n                    (photoTakenAt.split(\"T\")[1].split(\":\")[0] < 12\n                      ? \" 오전 \"\n                      : \" 오후 \") +\n                    photoTakenAt.split(\"T\")[1].split(\".\")[0]\n                },\n                {\n                  label: \"등록일\",\n                  val:\n                    createdAt.split(\"T\")[0].replace(/-/g, \".\") +\n                    (createdAt.split(\"T\")[1].split(\":\")[0] < 12\n                      ? \" 오전 \"\n                      : \" 오후 \") +\n                    createdAt.split(\"T\")[1].split(\".\")[0]\n                }\n              ].map(({ label, val }) => (\n                <Descriptions key={label}>\n                  <Descriptions.Item label={label}>{val}</Descriptions.Item>\n                </Descriptions>\n              ))}\n            </Card>\n          </PhotoBox>\n          <LabelBox>\n            <LabelHeader>\n              <LabelIcon />\n              <LabelTitle>라벨 정보</LabelTitle>\n            </LabelHeader>\n            {labels.map(({ id, typeId, description }) => (\n              <Label\n                key={id}\n                typeId={typeId}\n                type={ladeltypes.find(({ id }) => id === typeId).title}\n                description={description}\n              />\n            ))}\n          </LabelBox>\n        </Contant>\n      </Modal>\n    </Container>\n  );\n};\nexport default DetailPresenter;\n","import React, {\n  useEffect,\n  useMemo,\n  useCallback,\n  useReducer,\n  createContext\n} from \"react\";\nimport axios from \"axios\";\nimport { GET_DATA } from \"Pages/List/ListContainer\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { notification } from \"antd\";\n\nexport const DataContext = createContext({\n  ladeltypes: [],\n  data: {},\n  labels: []\n});\n\nconst initialState = {\n  isLoading: true,\n  ladeltypes: [],\n  data: {},\n  labels: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case GET_DATA:\n      const completedList = JSON.parse(localStorage.getItem(\"completed\"));\n      // localstorage에 데이터 있을 경우 상태 반영\n      if (completedList) {\n        action.photos.completed = completedList.find(\n          item => action.photos.id === item.id\n        )\n          ? completedList.find(item => action.photos.id === item.id).completed\n          : action.photos.completed;\n      }\n      return {\n        ...state,\n        isLoading: false,\n        ladeltypes: action.ladeltypes,\n        data: action.photos,\n        labels: action.photos.labels\n      };\n    default:\n      return state;\n  }\n};\n\nconst DetailContainer = ({ history, match: { params } }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { isLoading, ladeltypes, data, labels } = state;\n  const value = useMemo(() => ({ ladeltypes, data, labels }), [\n    ladeltypes,\n    data,\n    labels\n  ]);\n\n  // Get a single photo\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data: ladeltypes } = await axios.get(\n          `${process.env.REACT_APP_NEARTHLAB_API_URL}labelTypes`\n        );\n        const { data: photos } = await axios.get(\n          `${process.env.REACT_APP_NEARTHLAB_API_URL}photos/${params.id}`\n        );\n\n        dispatch({\n          type: GET_DATA,\n          ladeltypes: ladeltypes,\n          photos: photos\n        });\n      } catch (error) {\n        notification[\"error\"]({\n          message: \"ERROR\",\n          description: \"파일 상세 정보를 가져올 수 없습니다.\"\n        });\n      }\n    };\n    getData();\n  }, [params.id]);\n\n  // 파일상세 정보 모달 창 닫기 버튼\n  const handleCancel = useCallback(\n    e => {\n      e.stopPropagation();\n      history.goBack();\n    },\n    [history]\n  );\n\n  // 작업완료 버튼\n  const handleSwitch = useCallback(\n    (checked, _) => {\n      let storageArr = JSON.parse(localStorage.getItem(\"completed\"))\n        ? JSON.parse(localStorage.getItem(\"completed\"))\n        : [];\n      let getItem;\n\n      // storage에서 값 가져오기\n      if (storageArr.length > 0) {\n        storageArr.forEach(item => {\n          if (data.id === item.id) {\n            getItem = item;\n          }\n        });\n      }\n      // storage에 없으면 추가\n      if (getItem === undefined) {\n        storageArr.push({ id: data.id, completed: checked });\n        // storage에 있으면 상태 변경\n      } else {\n        storageArr[\n          storageArr.findIndex(({ id }) => getItem.id === id)\n        ].completed = checked;\n      }\n      localStorage.setItem(\"completed\", JSON.stringify(storageArr));\n      // 새로고침\n      history.go(0);\n    },\n    [data.id, history]\n  );\n\n  return isLoading ? null : (\n    <DataContext.Provider value={value}>\n      <DetailPresenter\n        handleCancel={handleCancel}\n        handleSwitch={handleSwitch}\n      />\n    </DataContext.Provider>\n  );\n};\n\nexport default DetailContainer;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  max-width: 400px;\n  margin: 80px auto 50px;\n`;\n\nconst Img = styled.img`\n  display: flex;\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst Text = styled.h2`\n  line-height: 1.4;\n  word-wrap: break-word;\n  margin: 20px 0 15px;\n  font-size: 26px;\n  font-weight: 600;\n  color: #b5b5b5;\n`;\n\nconst NotFoundPage = () => (\n  <Container>\n    <Helmet>\n      <title>404 | Nearthlab</title>\n    </Helmet>\n    <ImageContainer>\n      <Img src={require(`assets/img/404.png`)} />\n    </ImageContainer>\n    <Text>PAGE NOT FOUND</Text>\n  </Container>\n);\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport List from \"Pages/List\";\nimport Detail from \"Pages/Detail\";\nimport NotFoundPage from \"./404\";\n\nexport default () => (\n  <Router>\n    <Switch>\n      <Route path=\"/\" component={List} exact />\n      <Route path=\"/photos/:id\" component={List} />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n    <Route path=\"/photos/:id\" component={Detail} />\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n\n  @import \"responsive\";\n\n  html {\n      height: 100%;\n  }\n\n  body {\n      height: 100%;\n      font-family: -apple-system, Helvetica, Arial, \"hiragino kaku gothic pro\",\n          meiryo, \"Microsoft YaHei\", \"ms pgothic\", \"Apple SD Gothic Neo\",\n          \"Nanum Gothic\", \"Malgun Gothic\", sans-serif;\n  }\n\n  .container {\n      padding: 0;\n      max-width: 794px;\n  }\n\n  input,\n  input:focus {\n      outline: none !important;\n      box-shadow: none !important;\n  }\n\n  input[type=\"text\"],\n  textarea {\n      box-shadow: none !important;\n      -moz-appearance: none;\n      -webkit-appearance: none;\n      resize: none;\n  }\n\n  a {\n      cursor: pointer;\n  }\n\n  .ant-modal-header {\n    border-bottom: none !important;\n  }\n  .ant-modal-title {\n    font-size: 18px !important;\n    font-weight: 500 !important;\n    letter-spacing: -0.5px !important;\n    color: ${props => props.theme.gray} !important;\n  }\n  .ant-modal-body {\n    padding: 0 24px 24px !important\n  }\n  .ant-modal-footer {\n    border-top: none !important;\n    padding: 10px 24px 24px !important;\n  }\n  .ant-switch{\n    background-color: ${props => props.theme.border} !important;\n    width: 88px !important;\n    height: 34px !important;\n  }\n  .ant-switch-checked {\n    background-color: ${props => props.theme.btnBlue} !important;\n    width: 88px !important;\n    height: 34px !important;\n  }\n  .ant-switch-checked::after {\n    top: 3px !important;\n    margin-left: -2px !important;\n    width: 32px !important;\n    height: 26px !important;\n  }\n  .ant-switch::after {\n    top: 3px !important;\n    width: 32px !important;\n    height: 26px !important;\n  }\n  .ant-switch-inner {\n    font-size: 14px !important;\n    font-weight: 500 !important;\n  }\n  .ant-descriptions-item-colon {\n    font-size: 13px !important;\n    font-weight: 500 !important;\n    letter-spacing: -0.2px !important;\n    color: ${props => props.theme.ligthGray} !important;\n  }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nimport \"antd/dist/antd.css\";\n\nconst App = () => (\n  <>\n    <Router />\n    <GlobalStyles />\n  </>\n);\n\nexport default App;\n","const theme = {\n  blue: \"#2a67e2\",\n  yellow: \"#f5c85c\",\n  green: \"#69dd95\",\n  gray: \"#434959\",\n  ligthGray: \"#727682\",\n  border: \"#dfe3ea\",\n  checkBox: \"#cbd1e0\",\n  btnBlue: \"#2a67e2\"\n};\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}